syntax = "proto3";

import "proto/remote_execution.proto";

package registry;

// Metadata about an optimized manifest.
message Manifest {
  // The (OCI, sha256:foo) digest of the manifest.
  string digest = 1;
  // Raw manifest contents.
  bytes data = 2;
  // Content type of the manifest.
  string content_type = 3;
  // CAS dependencies (layer blobs) for this manifest. We ignore an
  // optimized manifest if any of the referenced blobs are not in the
  // CAS anymore.
  repeated build.bazel.remote.execution.v2.Digest cas_dependencies = 4;
}

message Credentials {
  string username = 1;
  string password = 2;
}

// Also see the `platform` property in the official OCI specification:
// https://github.com/opencontainers/image-spec/blob/v1.0.0/image-index.md
message Platform {
  // CPU architecture (e.g. amd64, arm64)
  string arch = 1;
  // Operating system (e.g. linux)
  string os = 2;
  // CPU variant (e.g. v8, v7)
  string variant = 3;
}

message ConvertImageRequest {
  // The target image, including repo (e.g. docker.io/busybox:latest or
  // docker.io/busybox@sha256:foo)
  string image = 1;
  // Optional credentials for accessing the target image.
  Credentials credentials = 2;
}

message ConvertImageResponse {
  // Manifest of the converted image.
  Manifest manifest = 1;
}

message ConvertLayerRequest {
  // The target image, including repo (e.g. docker.io/busybox:latest or
  // docker.io/busybox@sha256:foo)
  string image = 1;
  // Optional credentials for accessing the target image.
  Credentials credentials = 2;
  // The OCI digest (sha256:foo) of the layer to convert.
  string layer_digest = 3;
}

message ConvertLayerResponse {
  // Whether the layer should not be included in the converted image.
  bool skip = 1;
  // The CAS digest of the converted layer.
  build.bazel.remote.execution.v2.Digest cas_digest = 2;
  // The OCI digest (sha256:foo) of the converted layer.
  string digest = 3;
  // The diff ID (OCI digest of the uncompressed data) of the converted layer.
  string diff_id = 4;
  // The compressed size of the converted layer.
  int64 size = 5;
  // The media type of the converted layer.
  string media_type = 6;
  // Annotations for this layer.
  message Annotation {
    string key = 1;
    string value = 2;
  }
  repeated Annotation annotations = 7;
}

service ImageConverter {
  rpc ConvertImage(ConvertImageRequest) returns (ConvertImageResponse);
  rpc ConvertLayer(ConvertLayerRequest) returns (ConvertLayerResponse);
}
