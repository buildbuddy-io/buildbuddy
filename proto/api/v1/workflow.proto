syntax = "proto3";

package api.v1;

import "google/rpc/status.proto";

message ExecuteWorkflowRequest {
  // URL of the repo the workflow is running for
  // Ex. "https://github.com/some-user/acme"
  string repo_url = 1;
  // Branch the workflow should run on
  // Ex. "cool-feature"
  string branch = 2;

  // OPTIONAL FIELDS

  // Name of the workflow action to execute. Corresponds to an action in
  // buildbuddy.yaml, or an action name in the default workflow config if
  // buildbuddy.yaml is missing from the repo.
  //
  // If this is not set, the API will execute all actions in the workflow
  //
  // Ex. "Test all targets"
  string action_name = 3;
  // Whether to run the workflow in a clean container. This prevents all
  // existing workflow containers from being reused, so using this flag is not
  // encouraged.
  bool clean = 4;
  // VISIBILITY build metadata used for the workflow invocation.
  string visibility = 5;
}

message ExecuteWorkflowResponse {
  message ActionStatus {
    // Corresponds to an action in buildbuddy.yaml, or an action name in the
    // default workflow config if buildbuddy.yaml is missing from the repo. Ex.
    // "Test all targets"
    string action_name = 1;

    // The BuildBuddy invocation ID from executing the action.
    string invocation_id = 2;

    // The GRPC status from executing the action.
    google.rpc.Status status = 3;
  }

  // A list of the actions executed by the API.
  repeated ActionStatus action_statuses = 1;
}
