syntax = "proto3";

package api.v1;

// Request object for GetFile
message GetFileRequest {
  // File URI corresponding to the `uri` field in the File message.
  //
  // If the BuildBuddy instance supports ZSTD transcoding, the literal string
  // "/blobs/" in the URI (third-to-last path segment) may be replaced with
  // "/compressed-blobs/zstd/", and the server will return a compressed payload.
  //
  // Examples:
  // * Uncompressed blob with remote instance name of "ci":
  //   bytestream://remote.buildbuddy.io/ci/blobs/09e6fe6e1fd8c8734339a0a84c3c7a0eb121b57a45d21cfeb1f265bffe4c4888/216
  //
  // * zstd-compressed blob with no remote instance name:
  //   bytestream://remote.buildbuddy.io/compressed-blobs/zstd/09e6fe6e1fd8c8734339a0a84c3c7a0eb121b57a45d21cfeb1f265bffe4c4888/216
  string uri = 1;
}

// Response object for GetFile
message GetFileResponse {
  // The file data.
  bytes data = 1;
}

// A file associated with a BuildBuddy build.
message File {
  string name = 1;
  string uri = 2;
  string hash = 3;
  int64 size_bytes = 4;
}

// Request object for DeleteFile
message DeleteFileRequest {
  // URI of file to delete.
  //
  // CAS URI format:
  // <instance_name>/<blobs|compressed-blobs/zstd>/<digest_hash>/<digest_size>
  // Action cache URI format:
  // <instance_name>/<blobs|compressed-blobs/zstd>/ac/<digest_hash>/<digest_size>
  //
  // Examples:
  // * CAS artifact:
  //   compressed-blobs/zstd/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/2084
  //
  // * CAS artifact with remote_instance_name
  //   my_remote_instance_name/blobs/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/2084
  //
  // * Action cache artifact:
  //   blobs/ac/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/2084
  //
  // * Action cache artifact with remote_instance_name
  //   my_remote_instance_name/blobs/ac/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/2084
  string uri = 1;
}

// Response object for DeleteFile
message DeleteFileResponse {}
