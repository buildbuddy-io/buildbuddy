syntax = "proto3";

package api.v1;

import "google/rpc/status.proto";

message RemoteRunRequest {
  // URL of the repo the workflow is running for
  // Ex. "https://github.com/some-user/acme"
  string repo = 1;

  // Git refs at which the workflow should be run (at least one of `branch` or
  // `commit_sha` must be set). If only `branch` is set, will run from the tip
  // of the branch. If only `commit_sha` is set, reporting will not contain the
  // branch name.
  string branch = 2;
  string commit_sha = 3;

  // Bash commands to run, in order.
  // Ex. [{"run": "bazel build :server"}, {"run": "echo \"Hello World\""}]
  repeated Step steps = 4;

  // Environment variables to set in the runner env.
  map<string, string> env = 5;

  // Platform properties to apply to the runner.
  // Ex. ["OSFamily":"linux"}, {"Arch":"amd64"}]
  map<string, string> platform_properties = 6;

  // Max time before run should be canceled.
  // Ex. "15s", "2h"
  string timeout = 7;

  // If true, start the runner but do not wait for the action to be scheduled
  // before returning a response.
  bool async = 8;
}

message Step {
  string run = 1;
}

message RemoteRunResponse {
  // The invocation ID of the remote run.
  string invocation_id = 1;
}
