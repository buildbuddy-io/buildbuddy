syntax = "proto3";

package spawn_diff;

import "proto/spawn.proto";

message SpawnDiff {
  string primary_output = 1;
  string target_label = 2;
  string mnemonic = 3;

  oneof diff {
    OldOnly old_only = 5;
    NewOnly new_only = 6;
    Modified modified = 7;
  }
}

message OldOnly {
  bool top_level = 1;
}

message NewOnly {
  bool top_level = 1;
}

message Modified {
  repeated Diff diffs = 1;
  map<string, uint32> transitively_invalidated = 2;
  bool expected = 3;
}

message Diff {
  oneof diff {
    StringSetDiff tool_paths = 1;
    FileSetDiff tool_contents = 2;
    StringSetDiff input_paths = 3;
    FileSetDiff input_contents = 4;
    DictDiff env = 5;
    ListDiff args = 6;
    StringSetDiff param_file_paths = 7;
    FileSetDiff param_file_contents = 8;
    StringSetDiff output_paths = 9;
    FileSetDiff output_contents = 10;
    IntDiff exit_code = 11;
  }
}

message ListDiff {
  repeated string old = 1;
  repeated string new = 2;
}

message DictDiff {
  map<string, string> old_changed = 1;
  map<string, string> new_changed = 2;
}

message StringSetDiff {
  repeated string old_only = 1;
  repeated string new_only = 2;
}

message FileSetDiff {
  repeated FileDiff file_diffs = 1;
}

message FileDiff {
  oneof old {
    tools.protos.ExecLogEntry.File old_file = 1;
    tools.protos.ExecLogEntry.Directory old_directory = 3;
    tools.protos.ExecLogEntry.UnresolvedSymlink old_symlink = 5;
    string old_invalid_output = 7;
  }
  oneof new {
    tools.protos.ExecLogEntry.File new_file = 2;
    tools.protos.ExecLogEntry.Directory new_directory = 4;
    tools.protos.ExecLogEntry.UnresolvedSymlink new_symlink = 6;
    string new_invalid_output = 8;
  }
}

message IntDiff {
  int32 old = 1;
  int32 new = 2;
}
