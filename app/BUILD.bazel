load("@npm_bazel_typescript//:index.bzl", "ts_library")
load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")
load("@npm_bazel_terser//:index.bzl", "terser_minified")

package(default_visibility = ["//visibility:public"])

rollup_bundle(
    name = "app_bundle",
    config_file = "rollup.config.js",
    entry_point = "app.tsx",
    deps = [
        ":app",
        "@npm//events",
        "@npm//rollup-plugin-commonjs",
        "@npm//rollup-plugin-node-resolve",
        "@npm//rollup-plugin-replace",
    ],
)

terser_minified(
    name = "app_bundle.min",
    src = ":app_bundle",
)

config_setting(
    name = "fastbuild",
    values = {"compilation_mode": "fastbuild"},
)

alias(
    name = "app_js_entry_point",
    actual = select({
        ":fastbuild": ":app_bundle",
        "//conditions:default": ":app_bundle.min",
    }),
)

ts_library(
    name = "app",
    srcs = glob(["*.tsx"]),
    deps = [
        "//app/root",
        "@npm//@types/react",
        "@npm//@types/react-dom",
        "@npm//react",
        "@npm//react-dom",
    ],
)

genrule(
    name = "style",
    srcs = [
        "//app/root:root.css",
        "//app/errors:errors.css",
        "//app/compare:compare.css",
        "//app/invocation:invocation.css",
        "//app/components/button:button.css",
        "//app/components/dialog:dialog.css",
        "//app/components/input:input.css",
        "//app/components/menu:menu.css",
        "//app/components/modal:modal.css",
        "//app/components/popup:popup.css",
        "//app/components/select:select.css",
    ],
    outs = ["style.css"],
    cmd_bash = ("""
        touch out;
        for f in $(SRCS); do
            if [[ ! -d $$f ]]; then
            (cat $$f; echo) >> out;
            fi;
        done;
        cat out > $@;
    """),
)
