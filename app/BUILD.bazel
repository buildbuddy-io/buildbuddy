load("@npm//@bazel/typescript:index.bzl", "ts_library")
load("@npm//@bazel/esbuild:index.bzl", "esbuild")

package(default_visibility = ["//visibility:public"])

config_setting(
    name = "fastbuild",
    values = {
        "compilation_mode": "fastbuild",
    },
)

esbuild(
    name = "app_bundle",
    args = [
        "--resolve-extensions=.mjs,.js",
    ],
    define = ["process.env.NODE_ENV=\"production\""],
    entry_points = ["app.tsx"],
    minify = select({
        ":fastbuild": False,
        "//conditions:default": True,
    }),
    tool = select({
        "@bazel_tools//src/conditions:darwin": "@esbuild_darwin//:bin/esbuild",
        "@bazel_tools//src/conditions:linux_x86_64": "@esbuild_linux//:bin/esbuild",
    }),
    deps = [
        ":app",
    ],
)

ts_library(
    name = "app",
    srcs = glob(["*.tsx"]),
    deps = [
        "//app/root",
        "@npm//@types/react",
        "@npm//@types/react-dom",
        "@npm//react",
        "@npm//react-dom",
    ],
)

genrule(
    name = "style",
    srcs = [
        "//app/root:root.css",
        "//app/alert:alert.css",
        "//app/compare:compare.css",
        "//app/invocation:invocation.css",
        "//app/components/button:button.css",
        "//app/components/dialog:dialog.css",
        "//app/components/input:input.css",
        "//app/components/menu:menu.css",
        "//app/components/modal:modal.css",
        "//app/components/popup:popup.css",
        "//app/components/select:select.css",
    ],
    outs = ["style.css"],
    cmd_bash = """
        touch out;
        for f in $(SRCS); do
            if [[ ! -d $$f ]]; then
            (cat $$f; echo) >> out;
            fi;
        done;
        cat out > $@;
    """,
)
