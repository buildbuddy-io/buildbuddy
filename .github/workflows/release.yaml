name: "release"

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'release skip')"
    steps:
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.BUILDBUDDY_GITHUB_USER_TOKEN }}"
          prerelease: false
          draft: true

  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'release skip')"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.1.0/bazelisk-linux-amd64"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"

      - name: Get Tag
        id: tag
        run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}

      - name: Build and Upload Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" build --config=release --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_ORG_API_KEY }} //server/cmd/buildbuddy:buildbuddy //enterprise/server/cmd/server:buildbuddy //enterprise/server/cmd/executor:executor
          cp bazel-bin/server/cmd/**/**/buildbuddy buildbuddy-linux-amd64
          cp bazel-bin/enterprise/server/cmd/**/**/buildbuddy buildbuddy-enterprise-linux-amd64
          cp bazel-bin/enterprise/server/cmd/**/**/executor executor-enterprise-linux-amd64
          gh release upload ${{ steps.tag.outputs.TAG }} buildbuddy-linux-amd64 buildbuddy-enterprise-linux-amd64 executor-enterprise-linux-amd64 --clobber
