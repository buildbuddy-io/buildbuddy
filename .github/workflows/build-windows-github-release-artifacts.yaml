name: "Build Windows Github Release Artifacts"

on:
  workflow_dispatch:
    inputs:
      release_branch:
        description: "Git branch to checkout."
        required: true
        default: "master"
        type: string
      version_tag:
        description: "Version to tag release artifacts."
        required: true
        type: string
  workflow_call:
    inputs:
      release_branch:
        description: "Git branch to checkout."
        required: true
        type: string
      version_tag:
        description: "Version to tag release artifacts."
        required: true
        type: string

jobs:
  build:
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.release_branch }}
          # We need to fetch git tags to obtain the latest version tag to report
          # the version of the running binary.
          fetch-depth: 0

      - name: Restore caches
        id: restore-caches
        uses: ./.github/actions/cache-restore
        with:
          repo-cache-dir: "D:/bazel/repo-cache/"
          go-mod-cache-dir: "D:/go-mod-cache/"
          yarn-cache-dir: "~\\AppData\\Local\\Yarn\\Cache\\v6"

      - name: Build and Upload Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GO_REPOSITORY_USE_HOST_CACHE: 1
          GOMODCACHE: "D:/go-mod-cache"
        run: |
          bazelisk --output_user_root=D:/0 build --config=release-windows --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_ORG_API_KEY }} //enterprise/server/cmd/executor:executor
          $execution_root = bazelisk --output_user_root=D:/0 info execution_root
          $artifact_rel_path = bazelisk --output_user_root=D:/0 cquery --config=release-windows --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_ORG_API_KEY }} --output=files //enterprise/server/cmd/executor:executor
          $artifact_abs_path = "${execution_root}\${artifact_rel_path}"
          Copy-Item -Path $artifact_abs_path -Destination executor-enterprise-windows-amd64-beta.exe
          gh release upload ${{ inputs.version_tag }} executor-enterprise-windows-amd64-beta.exe --clobber

      - name: Save caches
        uses: ./.github/actions/cache-save
        if: always()
        with:
          repo-cache-hit: ${{ steps.restore-caches.outputs.repo-cache-hit }}
          repo-cache-dir: "D:/bazel/repo-cache/"
          go-mod-cache-hit: ${{ steps.restore-caches.outputs.go-mod-cache-hit }}
          go-mod-cache-dir: "D:/go-mod-cache/"
          yarn-cache-hit: ${{ steps.restore-caches.outputs.yarn-cache-hit }}
          yarn-cache-dir: "~\\AppData\\Local\\Yarn\\Cache\\v6"
