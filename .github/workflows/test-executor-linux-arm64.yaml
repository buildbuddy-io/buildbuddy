name: "Test linux/arm64 executor"

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "*"

jobs:
  test:
    runs-on: ubuntu-22.04-16cpu-arm64-arm-limited
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # podman_test installs its own version of podman under / in order to test
      # the same version that we use in the executor while not having to
      # configure various podman directory paths. For now just uninstall the
      # podman installation that already comes with the GH actions runner.
      - name: Uninstall podman
        run: |
          sudo apt-get remove -y podman
          # Hack to work around https://github.com/containers/podman/issues/9164
          find /dev/shm -name 'libpod*' | xargs -r sudo rm -rf

      - name: Restore caches
        id: cache-restore
        uses: ./.github/actions/cache-restore

      - name: Run tests
        env:
          GO_REPOSITORY_USE_HOST_CACHE: 1
          GOMODCACHE: /home/runner/go-mod-cache
        run: |
          echo > user.bazelrc "
          common --config=cache
          common --repository_cache=~/repo-cache
          common --bes_backend=remote.buildbuddy.io
          common --bes_results_url=https://app.buildbuddy.io/invocation/
          common --remote_cache=remote.buildbuddy.io
          common --flaky_test_attempts=3
          common --local_test_jobs=1
          common --build_metadata=ROLE=CI
          common --build_metadata=DISABLE_COMMIT_STATUS_REPORTING=true
          common --color=yes
          common --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_ORG_API_KEY }}
          "

          bazel test --test_tag_filters=-performance,-docker \
            -- \
            //enterprise/server/remote_execution/... \
            //enterprise/server/test/integration/remote_execution/... \
            -//enterprise/server/remote_execution/containers/firecracker/... \
            -//enterprise/server/test/integration/remote_execution:remote_execution_test

          # Run a separate bazel invocation to invoke tests with the "docker" tag.
          # TODO: improve platform setup so that we can run this whenever the
          # host has podman available.
          bazel test --test_tag_filters=+docker \
            //enterprise/server/test/integration/podman:podman_test

          # Make sure the executor binary builds.
          bazel build //enterprise/server/cmd/executor

      - name: Save caches
        uses: ./.github/actions/cache-save
        if: always()
        with:
          repo-cache-dir: ${{ steps.cache-restore.outputs.repo-cache-dir }}
          go-mod-cache-dir: ${{ steps.cache-restore.outputs.go-mod-cache-dir }}
          yarn-cache-dir: ${{ steps.cache-restore.outputs.yarn-cache-dir }}
