name: "Restore download caches"
description: "Determines cache paths based on OS using hardcoded paths, restores external dependencies caches, and outputs cache-hit statuses and paths."
outputs:
  # Cache paths for each cache
  repo-cache-dir:
    description: "Determined Bazel Repo cache directory path"
    value: ${{ steps.determine-paths-linux.outputs.repo-cache-dir || steps.determine-paths-macos.outputs.repo-cache-dir || steps.determine-paths-windows.outputs.repo-cache-dir }}
  go-mod-cache-dir:
    description: "Determined Go Mod cache directory path"
    value: ${{ steps.determine-paths-linux.outputs.go-mod-cache-dir || steps.determine-paths-macos.outputs.go-mod-cache-dir || steps.determine-paths-windows.outputs.go-mod-cache-dir }}
  yarn-cache-dir:
    description: "Determined Yarn cache directory path"
    value: ${{ steps.determine-paths-linux.outputs.yarn-cache-dir || steps.determine-paths-macos.outputs.yarn-cache-dir || steps.determine-paths-windows.outputs.yarn-cache-dir }}
runs:
  using: composite
  steps:
    # Step to determine paths for Linux using /home/runner
    - name: Determine Cache Paths (Linux)
      id: determine-paths-linux
      if: runner.os == 'Linux'
      shell: bash
      run: |
        echo "repo-cache-dir=/home/runner/repo-cache" >> $GITHUB_OUTPUT
        echo "go-mod-cache-dir=/home/runner/go-mod-cache" >> $GITHUB_OUTPUT
        echo "yarn-cache-dir=/home/runner/.cache/yarn/v6" >> $GITHUB_OUTPUT

    # Step to determine paths for macOS using /Users/runner
    - name: Determine Cache Paths (macOS)
      id: determine-paths-macos
      if: runner.os == 'macOS'
      shell: bash
      run: |
        echo "repo-cache-dir=/Users/runner/repo-cache" >> $GITHUB_OUTPUT
        echo "go-mod-cache-dir=/Users/runner/go-mod-cache" >> $GITHUB_OUTPUT
        echo "yarn-cache-dir=/Users/runner/.cache/yarn/v6" >> $GITHUB_OUTPUT

    # Step to determine paths for Windows using D:\
    - name: Determine Cache Paths (Windows)
      id: determine-paths-windows
      if: runner.os == 'Windows'
      shell: pwsh # PowerShell is default on Windows runners
      run: |
        Add-Content -Path $env:GITHUB_OUTPUT -Value "repo-cache-dir=D:/bazel/repo-cache"
        Add-Content -Path $env:GITHUB_OUTPUT -Value "go-mod-cache-dir=D:/go-mod-cache"
        Add-Content -Path $env:GITHUB_OUTPUT -Value "yarn-cache-dir=~/AppData/Local/Yarn/Cache/v6"

    # Restore steps now use combined outputs from the determine steps
    - name: Restore Bazel Repo Cache
      uses: actions/cache/restore@v4
      id: repo-cache-restore
      with:
        # Use the path determined in the conditional steps
        path: ${{ steps.determine-paths-linux.outputs.repo-cache-dir || steps.determine-paths-macos.outputs.repo-cache-dir || steps.determine-paths-windows.outputs.repo-cache-dir }}
        key: repo-cache-${{ runner.os }}-${{ hashFiles('MODULE.bazel', 'WORKSPACE.bzlmod', 'WORKSPACE', 'deps.bzl') }}-${{ github.run_id }}-${{ github.run_attempt }}
        restore-keys: |
          repo-cache-${{ runner.os }}-${{ hashFiles('MODULE.bazel', 'WORKSPACE.bzlmod', 'WORKSPACE', 'deps.bzl') }}-
          repo-cache-${{ runner.os }}-

    - name: Restore Go Mod Cache
      uses: actions/cache/restore@v4
      id: go-mod-cache-restore
      with:
        # Use the path determined in the conditional steps
        path: ${{ steps.determine-paths-linux.outputs.go-mod-cache-dir || steps.determine-paths-macos.outputs.go-mod-cache-dir || steps.determine-paths-windows.outputs.go-mod-cache-dir }}
        key: go-mod-cache-${{ runner.os }}-${{ hashFiles('MODULE.bazel', 'WORKSPACE.bzlmod', 'WORKSPACE', 'go.mod', 'go.sum', 'deps.bzl') }}-${{ github.run_id }}-${{ github.run_attempt }}
        restore-keys: |
          go-mod-cache-${{ runner.os }}-${{ hashFiles('MODULE.bazel', 'WORKSPACE.bzlmod', 'WORKSPACE', 'go.mod', 'go.sum', 'deps.bzl') }}-
          go-mod-cache-${{ runner.os }}-

    - name: Restore Yarn Cache
      uses: actions/cache/restore@v4
      id: yarn-cache-restore
      with:
        # Use the path determined in the conditional steps
        path: ${{ steps.determine-paths-linux.outputs.yarn-cache-dir || steps.determine-paths-macos.outputs.yarn-cache-dir || steps.determine-paths-windows.outputs.yarn-cache-dir }}
        key: yarn-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock', '**/package.json') }}-${{ github.run_id }}-${{ github.run_attempt }}
        restore-keys: |
          yarn-cache-${{ runner.os }}-${{ hashFiles('**/yarn.lock', '**/package.json') }}-
          yarn-cache-${{ runner.os }}-
