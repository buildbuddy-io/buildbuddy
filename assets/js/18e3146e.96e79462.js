"use strict";(self.webpackChunkbuildbuddy_docs_website=self.webpackChunkbuildbuddy_docs_website||[]).push([[7508],{40506:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var a=n(54195),s=n(74848),o=n(28453);const i={slug:"clickhouse-build-trends",title:"How We Use ClickHouse to Analyze Trends Across Millions of Builds",authors:"lulu",date:"2022-11-22:12:00:00",image:"/img/blog/clickhouse.png",tags:["product","engineering"]},r=void 0,d={authorsImageUrls:[void 0]},l=[{value:"What&#39;s next",id:"whats-next",level:2}];function u(e){const t={a:"a",em:"em",h2:"h2",img:"img",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["When you use Buildbuddy with Bazel to build and test software, Buildbuddy\ncaptures information about each Bazel invocation, such as number of builds, build\nduration, remote cache performance, and more. Buildbuddy has\na ",(0,s.jsx)(t.a,{href:"https://app.buildbuddy.io/trends/",children:"Trends"})," page to visualize trends in this\ndata over time."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:n(15605).A+"",width:"1364",height:"1049"})}),"\n",(0,s.jsx)(t.p,{children:"The trends page allows you to see how improvements you are making to your builds\naffects your average build duration and other stats. It also exposes areas that\nmight need improving. For example, if you see the cache hit rate go down over\ntime, your build might have some non-deterministic build actions that could be\nimproved, or some newly introduced dependencies that result in more frequent\ncache invalidations."}),"\n",(0,s.jsxs)(t.p,{children:["When we first created the Trends page, we used MySQL queries to aggregate\nbuild stats and generate the data we wanted to display. For a time this worked\nwell, but we quickly ran into performance issues for customers that had very\nlarge numbers of builds. We were able to temporarily improve performance by\nadding various indices, and though this helped to reduce the number of rows\nread, it was not sufficient. Some customers do millions of builds monthly, and the\nTrends page (which can look back up to a year) for these customers was taking\nmore than 20 ",(0,s.jsx)(t.em,{children:"minutes"})," to load."]}),"\n",(0,s.jsx)(t.p,{children:"The queries behind the trends page require aggregation of multiple columns, such\nas cache hits and cache misses. A traditional row-based database like MySQL is\nnot always ideal for such a use case. In row-based databases, data is stored row\nby row. When aggregating columns, more I/O seeks are required than\na column-based database, which stores the data of each column in contiguous\nblocks. Moreover, column-based databases have a higher compression rate because\nconsecutive values of the same column are of the same type and may repeat."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:n(72115).A+"",width:"1049",height:"935"})}),"\n",(0,s.jsx)(t.p,{children:"With a row-based store, we can see from this diagram that computing a sum of\ncache hit count would require us to load both block 1 and block 2. With\na column-based store, all the cache hits data are stored in the same block."}),"\n",(0,s.jsx)(t.p,{children:"Therefore, we felt that using ClickHouse, a column-based database, would improve\nthe performance of required queries for the trends page. We validated\nClickHouse\u2019s performance against our use case: it took ClickHouse 0.317 seconds\nto process 1.5 million rows and calculate the stats. The same query took MySQL\nabout 24 minutes."}),"\n",(0,s.jsxs)(t.p,{children:["One of our goals for data migration is to make sure the data is accurate. We\nadded monitoring and compared data between MySQL and ClickHouse after we enabled\ndouble writing in production. One source of inconsistency was that data was\ninserted into ClickHouse both by the backfill script and production servers.\nDifferent to a traditional database, ClickHouse\u2019s\n",(0,s.jsx)(t.a,{href:"https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/replacingmergetree/",children:"ReplacingMergeTree"}),"\nengine only deduplicates data in the background at an indeterminate time. As\na result, we needed to manually run the\n",(0,s.jsx)(t.a,{href:"https://clickhouse.com/docs/en/sql-reference/statements/optimize/",children:"OPTIMIZE"}),"\noperation to force ClickHouse to deduplicate data after the backfill was done.\nAfter we were confident in the data consistency, we finally enabled the Trends\npage to read from ClickHouse."]}),"\n",(0,s.jsx)(t.h2,{id:"whats-next",children:"What's next"}),"\n",(0,s.jsx)(t.p,{children:"We are excited how ClickHouse unlocks more possibilities for us to provide\nanalytical insights into builds, targets, tests and remote execution. For\nexample, we want to add graphs that show how remote actions are spending most of\ntheir time. These insights can be used to guide remote execution performance\noptimizations."}),"\n",(0,s.jsxs)(t.p,{children:["We would love to hear your feedback about what stats and graphs you are interested in seeing.\nJoin our ",(0,s.jsx)(t.a,{href:"https://community.buildbuddy.io",children:"Slack channel"})," or email us at\n",(0,s.jsx)(t.a,{href:"mailto:hello@buildbuddy.io",children:"hello@buildbuddy.io"})," with any questions, comments, or thoughts."]})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},72115:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/row-column-datastore-599977fd97a8b05de1e4267f50ac9f25.png"},15605:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/trends-2-bbbcae75b1991b8423e69b75df0952d8.png"},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var a=n(96540);const s={},o=a.createContext(s);function i(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(o.Provider,{value:t},e.children)}},54195:e=>{e.exports=JSON.parse('{"permalink":"/blog/clickhouse-build-trends","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/clickhouse-build-trends.md","source":"@site/blog/clickhouse-build-trends.md","title":"How We Use ClickHouse to Analyze Trends Across Millions of Builds","description":"When you use Buildbuddy with Bazel to build and test software, Buildbuddy","date":"2022-11-22T12:00:00.000Z","tags":[{"inline":true,"label":"product","permalink":"/blog/tags/product"},{"inline":true,"label":"engineering","permalink":"/blog/tags/engineering"}],"readingTime":2.96,"hasTruncateMarker":true,"authors":[{"name":"Lulu Zhang","title":"Engineer @ BuildBuddy","url":"https://www.linkedin.com/in/luluzhang66","imageURL":"https://avatars.githubusercontent.com/u/3977083?v=4","key":"lulu","page":null}],"frontMatter":{"slug":"clickhouse-build-trends","title":"How We Use ClickHouse to Analyze Trends Across Millions of Builds","authors":"lulu","date":"2022-11-22:12:00:00","image":"/img/blog/clickhouse.png","tags":["product","engineering"]},"unlisted":false,"prevItem":{"title":"Bazelcon 2022 Recap","permalink":"/blog/bazelcon"},"nextItem":{"title":"Welcoming Iain Macdonald","permalink":"/blog/welcoming-iain-macdonald"}}')}}]);