"use strict";(self.webpackChunkbuildbuddy_docs_website=self.webpackChunkbuildbuddy_docs_website||[]).push([[1456],{88940:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var n=o(74848),r=o(28453);const s={slug:"meet-rules_xcodeproj",title:"Meet rules_xcodeproj",description:"We are happy to announce that today we are releasing the first version of rules_xcodeproj, version 0.1.0.",author:"Brentley Jones",author_title:"Developer Evangelist @ BuildBuddy",date:"2022-04-05:08:00:00",author_url:"https://brentleyjones.com",author_image_url:"https://avatars.githubusercontent.com/u/158658?v=4",image:"/img/meet_rules_xcodeproj.png",tags:["rules_xcodeproj"]},i=void 0,l={permalink:"/blog/meet-rules_xcodeproj",editUrl:"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/meet-rules_xcodeproj.md",source:"@site/blog/meet-rules_xcodeproj.md",title:"Meet rules_xcodeproj",description:"We are happy to announce that today we are releasing the first version of rules_xcodeproj, version 0.1.0.",date:"2022-04-05T08:00:00.000Z",formattedDate:"April 5, 2022",tags:[{label:"rules_xcodeproj",permalink:"/blog/tags/rules-xcodeproj"}],readingTime:1.835,hasTruncateMarker:!0,authors:[{name:"Brentley Jones",title:"Developer Evangelist @ BuildBuddy",url:"https://brentleyjones.com",imageURL:"https://avatars.githubusercontent.com/u/158658?v=4"}],frontMatter:{slug:"meet-rules_xcodeproj",title:"Meet rules_xcodeproj",description:"We are happy to announce that today we are releasing the first version of rules_xcodeproj, version 0.1.0.",author:"Brentley Jones",author_title:"Developer Evangelist @ BuildBuddy",date:"2022-04-05:08:00:00",author_url:"https://brentleyjones.com",author_image_url:"https://avatars.githubusercontent.com/u/158658?v=4",image:"/img/meet_rules_xcodeproj.png",tags:["rules_xcodeproj"]},unlisted:!1,prevItem:{title:"Distributed Scheduling for Faster Builds",permalink:"/blog/distributed-scheduling-for-faster-builds"},nextItem:{title:"Bazel's Remote Caching and Remote Execution Explained",permalink:"/blog/bazels-remote-caching-and-remote-execution-explained"}},a={authorsImageUrls:[void 0]},d=[];function u(e){const t={a:"a",em:"em",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://github.com/buildbuddy-io/rules_xcodeproj",children:"rules_xcodeproj"})," is a Bazel ruleset that can be used to\ngenerate Xcode projects from targets in your workspace. We are happy to announce\nthat today we are releasing the first version of the ruleset,\n",(0,n.jsx)(t.a,{href:"https://github.com/buildbuddy-io/rules_xcodeproj/releases/tag/0.1.0",children:"version 0.1.0"}),"."]}),"\n",(0,n.jsx)("p",{align:"center",children:(0,n.jsx)("img",{src:"/img/blog/rules_xcodeproj.png",height:"256"})}),"\n",(0,n.jsx)(t.p,{children:"There are already other tools out there that allow you to integrate Xcode with\nBazel. So you may be wondering why we decided to create another one. The core\nreason is there wasn't one tool that satisfied all of these requirements:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Fully supports all of Xcode's features","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Indexing (i.e. autocomplete, syntax highlighting, jump to definition)"}),"\n",(0,n.jsx)(t.li,{children:"Debugging"}),"\n",(0,n.jsx)(t.li,{children:"Inline warnings and errors"}),"\n",(0,n.jsx)(t.li,{children:"Fix-its"}),"\n",(0,n.jsx)(t.li,{children:"Tests"}),"\n",(0,n.jsx)(t.li,{children:"SwiftUI Previews"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["Supports building with Xcode (",(0,n.jsx)(t.em,{children:"not"})," Bazel)","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Useful for testing new Xcode features before Bazel and/or\nrules_apple/rules_swift supports it"}),"\n",(0,n.jsx)(t.li,{children:"An option if you don't want developers to build with Bazel quite yet"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["Supports building with Bazel, in Xcode","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"While still fully supporting all of Xcode's features"}),"\n",(0,n.jsx)(t.li,{children:"Without needing an XCBBuildService proxy"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Supports all of the Core C/C++/Obj-C, rules_apple, and rules_swift rules"}),"\n",(0,n.jsx)(t.li,{children:"Can be extended to support custom rules if needed"}),"\n",(0,n.jsxs)(t.li,{children:["Supports target discovery and focused projects","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Target discovery means it can use a query system to find related targets,\nsuch as tests, without having to manually list them all"}),"\n",(0,n.jsx)(t.li,{children:"Focused projects allow Xcode to have only a portion of your build graph\nincluded in it, making Xcode perform better for large projects"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Produces Xcode projects that look and feel like normal Xcode projects"}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"We've been working on rules_xcodeproj for two months, and while it doesn't\nyet support all of the above, we have designs and a roadmap to cover all of\nthose requirements. Depending on the rules your project uses, or the attributes\nof those rules, you should be able to generate an Xcode project that builds with\nXcode today, using version 0.1.0."}),"\n",(0,n.jsxs)(t.p,{children:["If you run into any problems with rules_xcodeproj, please check if\n",(0,n.jsx)(t.a,{href:"https://github.com/buildbuddy-io/rules_xcodeproj/issues",children:"another issue already exists"})," and comment on it, and if not,\n",(0,n.jsx)(t.a,{href:"https://github.com/buildbuddy-io/rules_xcodeproj/issues/new/choose",children:"file an issue"}),"! You can also email us at ",(0,n.jsx)(t.a,{href:"mailto:hello@buildbuddy.io",children:"hello@buildbuddy.io"}),"\nwith any questions, comments, or thoughts."]})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>l});var n=o(96540);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);