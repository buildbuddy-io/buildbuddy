"use strict";(self.webpackChunkbuildbuddy_docs_website=self.webpackChunkbuildbuddy_docs_website||[]).push([[4497],{72332:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var o=n(70595),r=n(74848),i=n(28453);const s={slug:"introducing-rules_xcodeproj-1-0",title:"Introducing rules_xcodeproj 1.0",description:"How we got here and what\u2019s next.",authors:"brentley",date:"2023-02-06:9:00:00",image:"/img/rules_xcodeproj_1_0.png",tags:["rules_xcodeproj"]},a=void 0,l={authorsImageUrls:[void 0]},d=[{value:"The road to 1.0",id:"the-road-to-10",level:2},{value:"What\u2019s next?",id:"whats-next",level:2},{value:"Thank you",id:"thank-you",level:2}];function h(e){const t={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Almost exactly one year ago I wrote the ",(0,r.jsx)(t.a,{href:"https://github.com/buildbuddy-io/rules_xcodeproj/commit/0bb516569aee5dd49b004c89a761b5d186f25b15",children:"first commit"})," for\n",(0,r.jsx)(t.a,{href:"https://github.com/buildbuddy-io/rules_xcodeproj",children:"rules_xcodeproj"}),". Like a lot of software engineers, I\u2019m pretty\nbad at estimating, and thought that I would be able to finish 1.0 in 2 to 4\nmonths \ud83d\ude05. The longer development cycle was a result of an increased scope and\nlevel of quality that I came to expect for a proper 1.0 release. Over the course\nof the year, I believe the project has risen to meet my expectations, and today\nI\u2019m happy to announce the release of ",(0,r.jsx)(t.a,{href:"https://github.com/buildbuddy-io/rules_xcodeproj/releases/tag/1.0.1",children:"version 1.0"})," of\nrules_xcodeproj!"]}),"\n",(0,r.jsx)("div",{align:"center",children:(0,r.jsx)("img",{alt:"Screenshot of a rules_xcodeproj generated project open in Xcode",src:"/img/blog/rules_xcodeproj_screenshot.png",width:"1245"})}),"\n",(0,r.jsx)(t.h2,{id:"the-road-to-10",children:"The road to 1.0"}),"\n",(0,r.jsxs)(t.p,{children:["The road to 1.0 has been an incredible journey. Early in the development cycle\nSpotify, Robinhood, and Slack engineers became adopters and contributors;\nwithout their help I wouldn\u2019t be writing this blog post today \ud83d\ude4f.\n",(0,r.jsx)(t.a,{href:"https://github.com/jpsim",children:"JP"})," became a vocal champion of rules_xcodeproj after\nintegrating it with the SwiftLint and Envoy Mobile projects. During BazelCon\n2022 the project got a couple shout-outs, including during\n",(0,r.jsx)(t.a,{href:"https://youtu.be/wy3Q38VJ5uQ?t=1209",children:"Erik\u2019s wonderful talk"}),". And I\u2019m also\nincredibly grateful that I was able to\n",(0,r.jsx)(t.a,{href:"https://youtu.be/B__SHnz3K3c",children:"present rules_xcodeproj itself"})," at the same\nconference."]}),"\n",(0,r.jsxs)(t.p,{children:["Deciding what was ",(0,r.jsx)(t.em,{children:"actually"})," important for the 1.0 release shifted throughout\nthe year. Some things that I initially thought were \u201cnice to haves\u201d, such as\nframework targets and comprehensive ruleset support, became \u201cblockers\u201d for the\nrelease. Other things that I was sure we would need before releasing, such as\nmultiple Xcode configurations (e.g. ",(0,r.jsx)(t.code,{children:"Debug"}),", ",(0,r.jsx)(t.code,{children:"Profile"}),", and ",(0,r.jsx)(t.code,{children:"Release"}),"),\ndiagnostic replaying, and BwX feature parity, ended up not being as important\n(though don\u2019t worry if you are wanting some of those things, we aren\u2019t done\nyet!)."]}),"\n",(0,r.jsxs)(t.p,{children:["The supported feature list also expanded throughout the year. It went from just\nneeding to support the Core C/C++/Objective-C, ",(0,r.jsx)(t.a,{href:"https://github.com/bazelbuild/rules_swift",children:"rules_swift"}),", and\n",(0,r.jsx)(t.a,{href:"https://github.com/bazelbuild/rules_apple",children:"rules_apple"})," rules, to supporting nearly any ruleset. Also,\noutside contributors made their mark: ",(0,r.jsx)(t.a,{href:"https://github.com/cgrindel",children:"Chuck"})," added\nsupport for custom Xcode schemes; ",(0,r.jsx)(t.a,{href:"https://github.com/chiragramani",children:"Chirag"}),"\nadded support for Runtime Sanitizers; ",(0,r.jsx)(t.a,{href:"https://github.com/maxwellE",children:"Maxwell"}),"\nadded support for Launch, Profile, and Test action environment variables and\ncommand-line arguments; ",(0,r.jsx)(t.a,{href:"https://github.com/thii",children:"Thi"})," contributed BwB mode\nspeed-ups and assisted with landing many more efficiency changes; and many\nothers helped me test changes on their varied and complex projects. Overall\nthese contributions, both in actual code and in invaluable time, allowed\nrules_xcodepoj to be what it is today. Without this community effort the scope\nand quality of the 1.0 release wouldn\u2019t be at the same level."]}),"\n",(0,r.jsx)(t.h2,{id:"whats-next",children:"What\u2019s next?"}),"\n",(0,r.jsxs)(t.p,{children:["While the 1.0 release marks a certain level \u201cdoneness\u201d, there is still a lot we\nwant to add and improve. When I\n",(0,r.jsx)(t.a,{href:"/blog/meet-rules_xcodeproj",children:"announced rules_xcodeproj"}),", I listed a set of\nrequirements that other projects didn\u2019t fulfill, and I stated that I wanted\nrules_xcodeproj to cover all of them. I feel that with the 1.0 release we still\nhave a little ways to go to fully cover those requirements; though some\nwill have to be in spirit instead of to the letter, as Bazel and Xcode proved\nto be more stubborn than I expected."]}),"\n",(0,r.jsx)(t.p,{children:"Here\u2019s a list of changes that I hope we can implement in the near future:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["An additional build mode, currently called \u201cBuild with Bazel via Proxy\u201d\n(BwBvP)","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Uses ",(0,r.jsx)(t.a,{href:"https://github.com/MobileNativeFoundation/XCBBuildServiceProxyKit",children:"XCBBuildServiceProxyKit"})," to create an\nXCBBuildService proxy"]}),"\n",(0,r.jsx)(t.li,{children:"Adds replaying of diagnostics, which removes duplicate errors/warnings,\npersists warnings, and enables Fix-Its"}),"\n",(0,r.jsx)(t.li,{children:"Produces a custom Build Report, removing noise from the logs, and fixing the\nprogress bar"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["BwB or BwBvP support for Xcode features that break with relative paths","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Source code viewer in Instruments"}),"\n",(0,r.jsx)(t.li,{children:"Undefined Behavior Sanitizer navigation"}),"\n",(0,r.jsx)(t.li,{children:"Thread Performance Checker navigation"}),"\n",(0,r.jsx)(t.li,{children:"Memory Graph Analyzer with Malloc stack logging navigation"}),"\n",(0,r.jsx)(t.li,{children:"Inline code coverage"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.li,{children:"Support for multiple Xcode configurations"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"thank-you",children:"Thank you"}),"\n",(0,r.jsx)(t.p,{children:"Once again, I would like to thank all of the contributors and users we\u2019ve gained\nthroughout the last year. Hopefully you are as proud of the 1.0 release as I am.\nAnd for anyone reading that hasn\u2019t tried rules_xcodeproj yet, or it didn\u2019t meet\nyour requirements in an earlier release, I invite you to give it a shot now."}),"\n",(0,r.jsxs)(t.p,{children:["If you run into any problems with rules_xcodeproj, please check if\n",(0,r.jsx)(t.a,{href:"https://github.com/buildbuddy-io/rules_xcodeproj/issues",children:"another issue already exists"})," and comment on it, and if not,\n",(0,r.jsx)(t.a,{href:"https://github.com/buildbuddy-io/rules_xcodeproj/issues/new/choose",children:"file an issue"}),"! You can also join us in the ",(0,r.jsx)(t.code,{children:"#rules_xcodeproj"}),"\nchannel in the ",(0,r.jsx)(t.a,{href:"https://slack.bazel.build/",children:"Bazel Slack workspace"}),", and you can email us at\n",(0,r.jsx)(t.a,{href:"mailto:hello@buildbuddy.io",children:"hello@buildbuddy.io"})," with any questions, comments, or thoughts."]})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var o=n(96540);const r={},i=o.createContext(r);function s(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:t},e.children)}},70595:e=>{e.exports=JSON.parse('{"permalink":"/blog/introducing-rules_xcodeproj-1-0","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/introducing-rules_xcodeproj-1-0.md","source":"@site/blog/introducing-rules_xcodeproj-1-0.md","title":"Introducing rules_xcodeproj 1.0","description":"How we got here and what\u2019s next.","date":"2023-02-06T09:00:00.000Z","tags":[{"inline":true,"label":"rules_xcodeproj","permalink":"/blog/tags/rules-xcodeproj"}],"readingTime":3.745,"hasTruncateMarker":true,"authors":[{"name":"Brentley Jones","title":"Developer Evangelist @ BuildBuddy","url":"https://brentleyjones.com","imageURL":"https://avatars.githubusercontent.com/u/158658?v=4","key":"brentley","page":null}],"frontMatter":{"slug":"introducing-rules_xcodeproj-1-0","title":"Introducing rules_xcodeproj 1.0","description":"How we got here and what\u2019s next.","authors":"brentley","date":"2023-02-06:9:00:00","image":"/img/rules_xcodeproj_1_0.png","tags":["rules_xcodeproj"]},"unlisted":false,"prevItem":{"title":"Multiple Xcode Configurations with rules_xcodeproj 1.3","permalink":"/blog/multiple-xcode-configurations-with-rules_xcodeproj-1-3"},"nextItem":{"title":"Welcoming Son Luong Ngoc","permalink":"/blog/welcoming-son-luong-ngoc"}}')}}]);