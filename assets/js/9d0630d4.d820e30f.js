"use strict";(self.webpackChunkbuildbuddy_docs_website=self.webpackChunkbuildbuddy_docs_website||[]).push([[1691],{23950:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>r});var a=t(79894),s=t(74848),i=t(28453);const o={slug:"how-bazel-5-0-makes-your-builds-faster",title:"How Bazel 5.0 Makes Your Builds Faster",description:"Highlighting changes in Bazel 5.0 that help BuildBuddy users build even faster!",authors:"brentley",date:"2022-01-25:12:00:00",image:"/img/bazel_5_0_faster.png",tags:["bazel"]},l=void 0,d={authorsImageUrls:[void 0]},r=[{value:"Build Event Service (BES) improvements",id:"build-event-service-bes-improvements",level:2},{value:"Deduplicated cache calls and uploads",id:"deduplicated-cache-calls-and-uploads",level:2},{value:"Faster action cache checking",id:"faster-action-cache-checking",level:2},{value:"Asynchronous cache uploading",id:"asynchronous-cache-uploading",level:2},{value:"Compressed uploads and downloads",id:"compressed-uploads-and-downloads",level:2},{value:"And more...",id:"and-more",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",section:"section",sup:"sup",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["In our ",(0,s.jsx)(n.a,{href:"/blog/whats-new-in-bazel-5-0",children:"last post"}),",\nwe summarized the changes that were in the Bazel 5.0 release.\nThere were a lot of changes though,\nso it can be hard to determine which ones are impactful to you and why."]}),"\n",(0,s.jsx)(n.p,{children:"Don't worry, we've got your back.\nIn this post we highlight the changes that help BuildBuddy users build even faster!"}),"\n",(0,s.jsx)(n.h2,{id:"build-event-service-bes-improvements",children:"Build Event Service (BES) improvements"}),"\n",(0,s.jsx)(n.p,{children:"Bazel 5.0 includes many changes that make uploading BES events and artifacts to the BuildBuddy UI more reliable and performant."}),"\n",(0,s.jsxs)(n.p,{children:["Before Bazel 5.0,\nif you wanted to upload a timing profile to BuildBuddy,\nyou had to be fine with Bazel uploading all outputs referenced in the BEP,\neven if they were set to not be cached\n(e.g. the ",(0,s.jsx)(n.code,{children:"--noremote_upload_local_results"})," flag or the ",(0,s.jsx)(n.code,{children:"no-remote-cache"})," tag).\nNow you can set the ",(0,s.jsx)(n.code,{children:"--incompatible_remote_build_event_upload_respect_no_cache"})," flag,\nwhich causes Bazel to respect your wishes in regards to output caching."]}),"\n",(0,s.jsxs)(n.p,{children:["Also,\nif you've had ",(0,s.jsx)(n.a,{href:"https://github.com/bazelbuild/bazel/issues/11392",children:"warnings"})," or ",(0,s.jsx)(n.a,{href:"https://github.com/bazelbuild/bazel/issues/11408",children:"crashes"})," when using ",(0,s.jsx)(n.code,{children:"--bes_upload_mode=fully_async"})," in the past,\nthose should now be fixed as well."]}),"\n",(0,s.jsx)(n.h2,{id:"deduplicated-cache-calls-and-uploads",children:"Deduplicated cache calls and uploads"}),"\n",(0,s.jsxs)(n.p,{children:["Before Bazel 5.0,\nwhen using Remote Build Execution (RBE),\nBazel would ask the cache which blobs it needed to upload for every input to an action that was going to be executed remotely.",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#user-content-fn-1-6973e5",id:"user-content-fnref-1-6973e5","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),"\nIt did this even if it had previously uploaded a specific input for a previous action.\nSimilarly,\nif two actions with similar inputs were executed concurrently,\nthen Bazel didn't deduplicate the input existence checking or uploading."]}),"\n",(0,s.jsx)(n.p,{children:"For projects with a large number of shared inputs,\nwhich is common in C-family programming languages and Node.js,\nthis can cause a significant amount of network traffic,\nresulting in long build times on low-bandwidth, high-latency connections."}),"\n",(0,s.jsx)(n.p,{children:"On the output side of things,\nif multiple actions produced the same output,\nthen Bazel would upload the output multiple times.\nIf these outputs were large,\nthen this caused significant network overhead."}),"\n",(0,s.jsx)(n.p,{children:"Bazel 5.0 addresses these issues.\nIf you have a project that shares a lot of inputs between actions\n(e.g. C, C++, Objective-C, and Node.js),\nand you use BuildBuddy's Remote Execution,\nthen Bazel 5.0 should improve your build times."}),"\n",(0,s.jsx)(n.h2,{id:"faster-action-cache-checking",children:"Faster action cache checking"}),"\n",(0,s.jsxs)(n.p,{children:["In a similar vein as the above mentioned issues,\nBazel can be unnecessarily slow when checking if an action with a large number of inputs is cached.\nThis is because Bazel needs to build a ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Merkle_tree",children:"Merkle tree"})," from an action's inputs,\nwhich can be expensive if there are many."]}),"\n",(0,s.jsxs)(n.p,{children:["Starting in Bazel 5.0,\nyou can use the ",(0,s.jsx)(n.code,{children:"--experimental_remote_merkle_tree_cache"})," and ",(0,s.jsx)(n.code,{children:"--experimental_remote_merkle_tree_cache_size"})," flags to cache the nodes of these merkle trees.\nIf you have a project that shares a lot of it's inputs between actions\n(e.g. C, C++, Objective-C, and Node.js),\nand you use BuildBuddy's Remote Cache or Remote Execution,\nthen these flags should improve your build times."]}),"\n",(0,s.jsx)(n.h2,{id:"asynchronous-cache-uploading",children:"Asynchronous cache uploading"}),"\n",(0,s.jsx)(n.p,{children:"When an action is run locally,\nand Bazel uploads the action's outputs to a remote build cache,\nit waits for that upload to complete before it executes dependent actions.\nThis is needed for dependent actions that are executed remotely,\nbut it's unnecessary if they are executed locally.\nThese delays can cause builds that use BuildBuddy's Remote Cache to sometimes be slower than if they didn't use the cache."}),"\n",(0,s.jsxs)(n.p,{children:["Starting in Bazel 5.0,\nyou can use the ",(0,s.jsx)(n.code,{children:"--experimental_remote_cache_async"})," flag to have Bazel perform these uploads asynchronously.\nUploads still need to complete before a build finishes,\nbut now Bazel can speed ahead with local execution regardless of upload speed.\nNetwork utilization is also improved,\nas uploads can queue up quicker.\nIf you have a project that uploads to BuildBuddy's Remote Cache,\nthen this flag should improve your build times."]}),"\n",(0,s.jsx)(n.h2,{id:"compressed-uploads-and-downloads",children:"Compressed uploads and downloads"}),"\n",(0,s.jsxs)(n.p,{children:["Bazel 5.0 added the ",(0,s.jsx)(n.code,{children:"--experimental_remote_cache_compression"})," flag,\nwhich causes Bazel to compresses and decompress artifact uploads and downloads with the ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Zstandard",children:"zstd algorithm"}),".\nIn our testing this reduces the average number of bytes transferred by 60-70%."]}),"\n",(0,s.jsxs)(n.p,{children:["There is some overhead involved in this,\nboth on the Bazel side and the cache side,\nso it won't make every build for every project faster.",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#user-content-fn-2-6973e5",id:"user-content-fnref-2-6973e5","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})}),"\nThat said,\nif network bandwidth is a bottleneck in your build times,\nthis flag could make those builds significantly faster."]}),"\n",(0,s.jsx)(n.h2,{id:"and-more",children:"And more..."}),"\n",(0,s.jsxs)(n.p,{children:["Bazel 5.0 includes many additional changes that improve its reliability and performance.\nTo dig a little deeper,\nbe sure to check out our ",(0,s.jsx)(n.a,{href:"/blog/whats-new-in-bazel-5-0",children:"What's New in Bazel 5.0"})," post."]}),"\n","\n",(0,s.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,s.jsx)(n.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{id:"user-content-fn-1-6973e5",children:["\n",(0,s.jsxs)(n.p,{children:["Specifically,\nBazel would make a ",(0,s.jsx)(n.code,{children:"FindMissingBlobs"})," that contained every input for an action,\nevery time.\nNow Bazel will only include the unique inputs it hasn't already uploaded before. ",(0,s.jsx)(n.a,{href:"#user-content-fnref-1-6973e5","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{id:"user-content-fn-2-6973e5",children:["\n",(0,s.jsxs)(n.p,{children:["Eventually we might store artifacts in their compressed state,\nremoving most overhead on the cache side. ",(0,s.jsx)(n.a,{href:"#user-content-fnref-2-6973e5","data-footnote-backref":"","aria-label":"Back to reference 2",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var a=t(96540);const s={},i=a.createContext(s);function o(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:n},e.children)}},79894:e=>{e.exports=JSON.parse('{"permalink":"/blog/how-bazel-5-0-makes-your-builds-faster","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/how-bazel-5-0-makes-your-builds-faster.md","source":"@site/blog/how-bazel-5-0-makes-your-builds-faster.md","title":"How Bazel 5.0 Makes Your Builds Faster","description":"Highlighting changes in Bazel 5.0 that help BuildBuddy users build even faster!","date":"2022-01-25T12:00:00.000Z","tags":[{"inline":true,"label":"bazel","permalink":"/blog/tags/bazel"}],"readingTime":4.03,"hasTruncateMarker":true,"authors":[{"name":"Brentley Jones","title":"Developer Evangelist @ BuildBuddy","url":"https://brentleyjones.com","imageURL":"https://avatars.githubusercontent.com/u/158658?v=4","key":"brentley","page":null}],"frontMatter":{"slug":"how-bazel-5-0-makes-your-builds-faster","title":"How Bazel 5.0 Makes Your Builds Faster","description":"Highlighting changes in Bazel 5.0 that help BuildBuddy users build even faster!","authors":"brentley","date":"2022-01-25:12:00:00","image":"/img/bazel_5_0_faster.png","tags":["bazel"]},"unlisted":false,"prevItem":{"title":"Bazel\'s Remote Caching and Remote Execution Explained","permalink":"/blog/bazels-remote-caching-and-remote-execution-explained"},"nextItem":{"title":"What\'s New in Bazel 5.0","permalink":"/blog/whats-new-in-bazel-5-0"}}')}}]);