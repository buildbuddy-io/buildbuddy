From 0b1d194eab35b7d0d8d71ebbb2ce3a5d37cfc937 Mon Sep 17 00:00:00 2001
From: Zoey Greer <zoey@buildbuddy.io>
Date: Thu, 8 Aug 2024 13:54:51 -0400
Subject: [PATCH] patch

---
 fuse/mount.go | 23 +++++++++++++++--------
 1 file changed, 15 insertions(+), 8 deletions(-)

diff --git a/fuse/mount.go b/fuse/mount.go
index 941901d..135271f 100644
--- a/fuse/mount.go
+++ b/fuse/mount.go
@@ -7,7 +7,7 @@ import (
 	"syscall"
 )
 
-var reservedFDs []*os.File
+var reservedFDs []int
 
 func init() {
 	// Both Darwin and Linux invoke a subprocess with one
@@ -17,16 +17,23 @@ func init() {
 	// grabbing fd 3 and never releasing it. (This is not
 	// completely foolproof: a preceding init routine could grab fd 3,
 	// and then release it later.)
+	fdPair, err := syscall.Socketpair(syscall.AF_UNIX, syscall.SOCK_STREAM | syscall.SOCK_NONBLOCK, 0)
+	if err != nil {
+			panic(fmt.Sprintf("socketpair(AF_UNIX, SOCK_STREAM | SOCK_NONBLOCK, 0): %v", err))
+	}
+	syscall.Close(fdPair[1])
+	fd := fdPair[0]
+
 	for {
-		f, err := os.Open(os.DevNull)
-		if err != nil {
-			panic(fmt.Sprintf("open(%q): %v", os.DevNull, err))
-		}
-		if f.Fd() > 3 {
-			f.Close()
+		if fd > 3 {
+			syscall.Close(fd)
 			break
 		}
-		reservedFDs = append(reservedFDs, f)
+		reservedFDs = append(reservedFDs, fd)
+		fd, err = syscall.Dup(fd)
+		if err != nil {
+			panic(fmt.Sprintf("Dup(%q): %v", fd, err))
+		}
 	}
 }
 
-- 
2.39.2

